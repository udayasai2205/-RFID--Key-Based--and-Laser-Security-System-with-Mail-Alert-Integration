ARDUINO CODE:
#include <SPI.h>
#include <MFRC522.h>
#include <Keypad.h>
#define SS_PIN 10
#define RST_PIN 9
#define RELAY_PIN 8 // Pin connected to relay
#define UID " 62 10 A4 44" // Define UID as a constant string
#define LOCK_DELAY 5000 // 5 seconds in milliseconds
byte lock = 1; // Initially locked
unsigned long unlockTime = 0;
MFRC522 rfid(SS_PIN, RST_PIN);
const byte ROWS = 4; // Four rows
const byte COLS = 4; // Four columns
char keys[ROWS][COLS] = {
 {'1', '2', '3', 'A'},
 {'4', '5', '6', 'B'},
 {'7', '8', '9', 'C'},
 {'*', '0', '#', 'D'}
};
byte rowPins[ROWS] = {0, 1, 2, 3}; // Connect to the row pinouts of the keypad (D0
to D3)
byte colPins[COLS] = {4, 5, 6, 7}; // Connect to the column pinouts of the keypad
(D4 to D7)
Keypad keypad = Keypad(makeKeymap(keys), rowPins, colPins, ROWS, COLS);
void setup() {
 Serial.begin(9600);
 pinMode(RELAY_PIN, OUTPUT); // Set relay pin as output
 digitalWrite(RELAY_PIN, HIGH); // Initially keep the relay off
 
 SPI.begin();
 rfid.PCD_Init();
 Serial.println("Setup complete.");
}
void loop() {
// Handle RFID card scanning
 if (rfid.PICC_IsNewCardPresent() && rfid.PICC_ReadCardSerial()) {
 String ID = getCardID(); // Get the scanned RFID card ID
 Serial.print("Scanned RFID card ID: ");
 Serial.println(ID);
 if (ID == UID) {
 unlockDoor(); // Unlock the door
 } else {
 
 Serial.println("Wrong card detected.");
 delay(1500);
 
 }
 // Reset the RFID module for the next scan
 rfid.PICC_HaltA();
 rfid.PCD_StopCrypto1();
 }
 
 // Handle keypad input
 char key = keypad.getKey(); // Get key pressed from keypad
 if (key == '2') {
 unlockDoor(); // Unlock the door
 }
 // Lock the door after delay if unlocked
 if (lock == 0 && millis() - unlockTime >= LOCK_DELAY) {
 lockDoor(); // Lock the door
 }
}
String getCardID() {
 String ID = "";
 for (byte i = 0; i < rfid.uid.size; i++) {
 ID.concat(String(rfid.uid.uidByte[i] < 0x10 ? " 0" : " "));
 ID.concat(String(rfid.uid.uidByte[i], HEX));
 }
 ID.toUpperCase();
 return ID;
}
void lockDoor() {
 digitalWrite(RELAY_PIN, HIGH); // Turn off the relay to lock the door
 
 Serial.println("Door locked.");
 lock = 1; // Set lock status to locked
}
void unlockDoor() {
 digitalWrite(RELAY_PIN, LOW); // Turn on the relay to unlock the door
 
 Serial.println("Door unlocked.");
 lock = 0; // Set lock status to unlocked
 unlockTime = millis(); // Record the time when the door is unlocked
}
